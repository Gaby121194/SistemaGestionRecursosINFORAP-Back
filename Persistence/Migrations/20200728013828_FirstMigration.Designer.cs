// <auto-generated />
using System;
using INFORAP.API.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace INFORAP.API.Persistence.Migrations
{
    [DbContext(typeof(InfoRapContext))]
    [Migration("20200728013828_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Accion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NombreAccion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Accion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Display = "Listar",
                            NombreAccion = "List"
                        },
                        new
                        {
                            Id = 2,
                            Display = "Obtener",
                            NombreAccion = "Get"
                        },
                        new
                        {
                            Id = 3,
                            Display = "Crear",
                            NombreAccion = "Create"
                        },
                        new
                        {
                            Id = 4,
                            Display = "Actualizar",
                            NombreAccion = "Update"
                        },
                        new
                        {
                            Id = 5,
                            Display = "Eliminar",
                            NombreAccion = "Delete"
                        });
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Adjunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("IdRecursoHumano")
                        .HasColumnName("idRecursoHumano")
                        .HasColumnType("int");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdRecursoHumano")
                        .HasName("IX_FK_Adjunto_RecursoHumano");

                    b.HasIndex("IdServicio")
                        .HasName("IX_FK_Adjunto_Servicio");

                    b.ToTable("Adjunto");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("IdFueraServicio")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecurso1")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecurso2")
                        .HasColumnType("int");

                    b.Property<int?>("IdRequisito")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Observacion")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado")
                        .HasName("IX_FK_Alerta_Estado");

                    b.HasIndex("IdFueraServicio")
                        .HasName("IX_FK_Alerta_FueraServicio");

                    b.HasIndex("IdRecurso1")
                        .HasName("IX_FK_Alerta_Recurso1");

                    b.HasIndex("IdRecurso2")
                        .HasName("IX_FK_Alerta_Recurso2");

                    b.HasIndex("IdRequisito")
                        .HasName("IX_FK_Alerta_Requisito");

                    b.ToTable("Alerta");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Cuil")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Controlador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Display")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NombreControlador")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Show")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Controlador");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Display = "Alertas",
                            NombreControlador = "Alertas",
                            Show = false
                        },
                        new
                        {
                            Id = 2,
                            Display = "Authentication",
                            NombreControlador = "Authentication",
                            Show = false
                        },
                        new
                        {
                            Id = 3,
                            Display = "Perfil de usuario",
                            NombreControlador = "Profile",
                            Show = false
                        },
                        new
                        {
                            Id = 4,
                            Display = "Recurso Humanos",
                            NombreControlador = "RecursosHumanos",
                            Show = true
                        },
                        new
                        {
                            Id = 5,
                            Display = "Recursos Materiales",
                            NombreControlador = "RecursosMateriales",
                            Show = true
                        },
                        new
                        {
                            Id = 6,
                            Display = "Recursos Renovables",
                            NombreControlador = "RecursosRenovables",
                            Show = false
                        },
                        new
                        {
                            Id = 7,
                            Display = "Roles",
                            NombreControlador = "Roles",
                            Show = true
                        },
                        new
                        {
                            Id = 8,
                            Display = "Requisitos",
                            NombreControlador = "Requisitos",
                            Show = false
                        },
                        new
                        {
                            Id = 9,
                            Display = "Servicios",
                            NombreControlador = "Servicios",
                            Show = true
                        },
                        new
                        {
                            Id = 10,
                            Display = "Ubicaciones",
                            NombreControlador = "Ubicaciones",
                            Show = true
                        },
                        new
                        {
                            Id = 11,
                            Display = "Usuarios",
                            NombreControlador = "Usuarios",
                            Show = true
                        },
                        new
                        {
                            Id = 12,
                            Display = "Empresas",
                            NombreControlador = "Empresas",
                            Show = true
                        });
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CorreoContacto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Domicilio")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Logo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioContacto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.FueraServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdMotivoFueraServicio")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecursoMaterial")
                        .HasColumnType("int");

                    b.Property<string>("MotivoSalida")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoFueraServicio")
                        .HasName("IX_FK_FueraServicio_MotivoFueraServicio");

                    b.HasIndex("IdRecursoMaterial")
                        .HasName("IX_FK_FueraServicio_FueraServicio");

                    b.ToTable("FueraServicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.MotivoBajaServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotivoBajaServicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.MotivoDesasignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotivoDesasignacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.MotivoFueraServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotivoFueraServicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPermiso")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescripcionPermiso = "Administrador del sitio",
                            IsSuperUser = true,
                            NombrePermiso = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DescripcionPermiso = "Administrador de empresa",
                            IsSuperUser = false,
                            NombrePermiso = "MANAGER"
                        },
                        new
                        {
                            Id = 3,
                            DescripcionPermiso = "Encargado de servicios",
                            IsSuperUser = false,
                            NombrePermiso = "SERVICE-USER"
                        },
                        new
                        {
                            Id = 4,
                            DescripcionPermiso = "Encargado de recursos humanos",
                            IsSuperUser = false,
                            NombrePermiso = "RRHH-USER"
                        },
                        new
                        {
                            Id = 5,
                            DescripcionPermiso = "Usuario",
                            IsSuperUser = false,
                            NombrePermiso = "USER"
                        });
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.PermisoControladorAccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccionId")
                        .HasColumnType("int");

                    b.Property<int>("ControladorId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccionId")
                        .HasName("IX_FK_PermisoControladorAccion_Accion");

                    b.HasIndex("ControladorId")
                        .HasName("IX_FK_PermisoControladorAccion_Controlador");

                    b.HasIndex("PermisoId")
                        .HasName("IX_FK_PermisoControladorAccion_Permiso");

                    b.ToTable("PermisoControladorAccion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ControladorId = 1,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 2,
                            ControladorId = 1,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 3,
                            ControladorId = 1,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 4,
                            ControladorId = 2,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 5,
                            ControladorId = 2,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 6,
                            ControladorId = 2,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 7,
                            ControladorId = 2,
                            PermisoId = 4
                        },
                        new
                        {
                            Id = 8,
                            ControladorId = 2,
                            PermisoId = 5
                        },
                        new
                        {
                            Id = 9,
                            ControladorId = 3,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 10,
                            ControladorId = 3,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 11,
                            ControladorId = 3,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 12,
                            ControladorId = 3,
                            PermisoId = 4
                        },
                        new
                        {
                            Id = 13,
                            ControladorId = 3,
                            PermisoId = 5
                        },
                        new
                        {
                            Id = 14,
                            ControladorId = 4,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 15,
                            ControladorId = 4,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 16,
                            ControladorId = 4,
                            PermisoId = 4
                        },
                        new
                        {
                            Id = 17,
                            AccionId = 1,
                            ControladorId = 4,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 18,
                            ControladorId = 5,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 19,
                            ControladorId = 5,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 20,
                            ControladorId = 5,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 21,
                            ControladorId = 6,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 22,
                            ControladorId = 6,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 23,
                            ControladorId = 6,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 24,
                            ControladorId = 6,
                            PermisoId = 4
                        },
                        new
                        {
                            Id = 25,
                            ControladorId = 7,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 26,
                            ControladorId = 7,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 27,
                            ControladorId = 8,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 28,
                            ControladorId = 8,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 29,
                            ControladorId = 8,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 30,
                            ControladorId = 9,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 31,
                            ControladorId = 9,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 32,
                            ControladorId = 9,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 33,
                            ControladorId = 10,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 34,
                            ControladorId = 10,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 35,
                            ControladorId = 10,
                            PermisoId = 3
                        },
                        new
                        {
                            Id = 36,
                            ControladorId = 10,
                            PermisoId = 4
                        },
                        new
                        {
                            Id = 37,
                            ControladorId = 11,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 38,
                            ControladorId = 11,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 39,
                            ControladorId = 12,
                            PermisoId = 1
                        },
                        new
                        {
                            Id = 40,
                            AccionId = 2,
                            ControladorId = 12,
                            PermisoId = 2
                        },
                        new
                        {
                            Id = 41,
                            AccionId = 4,
                            ControladorId = 12,
                            PermisoId = 2
                        });
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.PermisoRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId")
                        .HasName("IX_FK_PermisoRol_Permiso");

                    b.HasIndex("RolId")
                        .HasName("IX_FK_PermisoRol_Rol");

                    b.ToTable("PermisoRol");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaAlta")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_Recurso_Empresa");

                    b.HasIndex("IdEstado")
                        .HasName("IX_FK_Recurso_Estado");

                    b.HasIndex("IdTipoRecurso")
                        .HasName("IX_FK_Recurso_TipoRecurso");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_FK_Recurso_Ubicacion");

                    b.ToTable("Recurso");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoAsignado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAsignado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaDesasignado")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdMotivoDesasignacion")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso1")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso2")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("MotivoDesasignacion")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoDesasignacion")
                        .HasName("IX_FK_RecursoAsignado_MotivoDesasignacion");

                    b.HasIndex("IdRecurso1")
                        .HasName("IX_FK_RecursoAsignado_RecursoAsignado");

                    b.HasIndex("IdRecurso2")
                        .HasName("IX_FK_RecursoAsignado_Recurso");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_FK_RecursoAsignado_Ubicacion");

                    b.ToTable("RecursoAsignado");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoHumano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Cuil")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<bool?>("Multiservicio")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("NroLegajo")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_RecursoHumano_Empresa");

                    b.HasIndex("IdRecurso")
                        .HasName("IX_FK_Recurso");

                    b.ToTable("RecursoHumano");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("Cantidad")
                        .HasColumnName("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DiasFueraServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnName("idRecurso")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoRecursoMaterial")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("Multiservicio")
                        .HasColumnName("multiservicio")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Stockeable")
                        .HasColumnName("stockeable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurso")
                        .HasName("IX_FK_RecursoMaterial_Recurso");

                    b.HasIndex("IdTipoRecursoMaterial")
                        .HasName("IX_FK_RecursoMaterial_TipoRecursoMaterial");

                    b.ToTable("RecursoMaterial");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoRenovable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoRecursoRenovable")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRecurso")
                        .HasName("IX_FK_RecursoRenovable_Recurso");

                    b.HasIndex("IdTipoRecursoRenovable")
                        .HasName("IX_FK_RecursoRenovable_TipoRecursoRenovable");

                    b.ToTable("RecursoRenovable");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Requisito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaCumplido")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime");

                    b.Property<bool>("Habilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecurso1")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecurso2")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecursoMaterial1")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecursoMaterial2")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRecursoRenovable")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRegla")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoRequisito")
                        .HasColumnType("int");

                    b.Property<int?>("IdUtiempo")
                        .HasColumnName("IdUTiempo")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Periodicidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoRequisito")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<bool?>("ValidarVigencia")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdServicio")
                        .HasName("IX_FK_Servicio");

                    b.HasIndex("IdTipoRecurso1")
                        .HasName("IX_FK_TipoRecurso1");

                    b.HasIndex("IdTipoRecurso2")
                        .HasName("IX_FK_TipoRecurso2");

                    b.HasIndex("IdTipoRecursoMaterial1")
                        .HasName("IX_FK_Requisito_TipoRecursoMaterial");

                    b.HasIndex("IdTipoRegla")
                        .HasName("IX_FK_Requisito_TipoRegla");

                    b.ToTable("Requisito");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_Rol_Empresa");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdMotivoBajaServicio")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecursoHumano1")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecursoHumano2")
                        .HasColumnType("int");

                    b.Property<string>("MotivoBaja")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("NroContrato")
                        .HasColumnType("int");

                    b.Property<string>("Objetivo")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente")
                        .HasName("IX_FK_Cliente");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_Empresa");

                    b.HasIndex("IdMotivoBajaServicio")
                        .HasName("IX_FK_Servicio_MotivoBajaServicio");

                    b.HasIndex("IdRecursoHumano1")
                        .HasName("IX_FK_RecursoHumano1");

                    b.HasIndex("IdRecursoHumano2")
                        .HasName("IX_FK_RecursoHumano2");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.ServicioRecurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAsignado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaDesasignado")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdMotivoDesasignacion")
                        .HasColumnType("int");

                    b.Property<int>("IdRecurso")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("MotivoDesasignacion")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoDesasignacion")
                        .HasName("IX_FK_ServicioRecurso_MotivoDesasignacion");

                    b.HasIndex("IdRecurso")
                        .HasName("IX_FK_ServicioRecurso_Recurso");

                    b.HasIndex("IdServicio")
                        .HasName("IX_FK_ServicioRecurso_ServicioRecurso");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_FK_ServicioRecurso_Ubicacion");

                    b.ToTable("ServicioRecurso");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.StockRecursoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<int>("CantidadTotal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdRecursoMaterial")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_StockRecursoMaterial_Empresa");

                    b.HasIndex("IdRecursoMaterial")
                        .HasName("IX_FK_StockRecursoMaterial_RecursoMaterial");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_FK_StockRecursoMaterial_Ubicacion");

                    b.ToTable("StockRecursoMaterial");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.TipoRecurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoRecurso");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.TipoRecursoMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoRecursoMaterial");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.TipoRecursoRenovable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoRecursoRenovable");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.TipoRegla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TipoRegla");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdRecursoHumano")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa")
                        .HasName("IX_FK_Usuario_Empresa");

                    b.HasIndex("IdRecursoHumano")
                        .HasName("IX_FK_Usuario_RecursoHumano");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.UsuarioRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreationUserId")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRol")
                        .HasName("IX_FK_Rol");

                    b.HasIndex("IdUsuario")
                        .HasName("IX_FK_Usuario");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Adjunto", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.RecursoHumano", "IdRecursoHumanoNavigation")
                        .WithMany("Adjunto")
                        .HasForeignKey("IdRecursoHumano")
                        .HasConstraintName("FK_Adjunto_RecursoHumano");

                    b.HasOne("INFORAP.API.Persistence.Context.Servicio", "IdServicioNavigation")
                        .WithMany("Adjunto")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK_Adjunto_Servicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Alerta", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Estado", "IdEstadoNavigation")
                        .WithMany("Alerta")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK_Alerta_Estado");

                    b.HasOne("INFORAP.API.Persistence.Context.FueraServicio", "IdFueraServicioNavigation")
                        .WithMany("Alerta")
                        .HasForeignKey("IdFueraServicio")
                        .HasConstraintName("FK_Alerta_FueraServicio");

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecurso1Navigation")
                        .WithMany("AlertaIdRecurso1Navigation")
                        .HasForeignKey("IdRecurso1")
                        .HasConstraintName("FK_Alerta_Recurso1");

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecurso2Navigation")
                        .WithMany("AlertaIdRecurso2Navigation")
                        .HasForeignKey("IdRecurso2")
                        .HasConstraintName("FK_Alerta_Recurso2");

                    b.HasOne("INFORAP.API.Persistence.Context.Requisito", "IdRequisitoNavigation")
                        .WithMany("Alerta")
                        .HasForeignKey("IdRequisito")
                        .HasConstraintName("FK_Alerta_Requisito");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.FueraServicio", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.MotivoFueraServicio", "IdMotivoFueraServicioNavigation")
                        .WithMany("FueraServicio")
                        .HasForeignKey("IdMotivoFueraServicio")
                        .HasConstraintName("FK_FueraServicio_MotivoFueraServicio");

                    b.HasOne("INFORAP.API.Persistence.Context.RecursoMaterial", "IdRecursoMaterialNavigation")
                        .WithMany("FueraServicio")
                        .HasForeignKey("IdRecursoMaterial")
                        .HasConstraintName("FK_FueraServicio_FueraServicio");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.PermisoControladorAccion", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Accion", "Accion")
                        .WithMany("PermisoControladorAccion")
                        .HasForeignKey("AccionId")
                        .HasConstraintName("FK_PermisoControladorAccion_Accion");

                    b.HasOne("INFORAP.API.Persistence.Context.Controlador", "Controlador")
                        .WithMany("PermisoControladorAccion")
                        .HasForeignKey("ControladorId")
                        .HasConstraintName("FK_PermisoControladorAccion_Controlador")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Permiso", "Permiso")
                        .WithMany("PermisoControladorAccion")
                        .HasForeignKey("PermisoId")
                        .HasConstraintName("FK_PermisoControladorAccion_Permiso")
                        .IsRequired();
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.PermisoRol", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Permiso", "Permiso")
                        .WithMany("PermisoRol")
                        .HasForeignKey("PermisoId")
                        .HasConstraintName("FK_PermisoRol_Permiso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Rol", "Rol")
                        .WithMany("PermisoRol")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_PermisoRol_Rol")
                        .IsRequired();
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Recurso", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("Recurso")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Recurso_Empresa");

                    b.HasOne("INFORAP.API.Persistence.Context.Estado", "IdEstadoNavigation")
                        .WithMany("Recurso")
                        .HasForeignKey("IdEstado")
                        .HasConstraintName("FK_Recurso_Estado");

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecurso", "IdTipoRecursoNavigation")
                        .WithMany("Recurso")
                        .HasForeignKey("IdTipoRecurso")
                        .HasConstraintName("FK_Recurso_TipoRecurso");

                    b.HasOne("INFORAP.API.Persistence.Context.Ubicacion", "IdUbicacionNavigation")
                        .WithMany("Recurso")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_Recurso_Ubicacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoAsignado", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.MotivoDesasignacion", "IdMotivoDesasignacionNavigation")
                        .WithMany("RecursoAsignado")
                        .HasForeignKey("IdMotivoDesasignacion")
                        .HasConstraintName("FK_RecursoAsignado_MotivoDesasignacion");

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecurso1Navigation")
                        .WithMany("RecursoAsignadoIdRecurso1Navigation")
                        .HasForeignKey("IdRecurso1")
                        .HasConstraintName("FK_RecursoAsignado_RecursoAsignado")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecurso2Navigation")
                        .WithMany("RecursoAsignadoIdRecurso2Navigation")
                        .HasForeignKey("IdRecurso2")
                        .HasConstraintName("FK_RecursoAsignado_Recurso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Ubicacion", "IdUbicacionNavigation")
                        .WithMany("RecursoAsignado")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_RecursoAsignado_Ubicacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoHumano", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("RecursoHumano")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_RecursoHumano_Empresa")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecursoNavigation")
                        .WithMany("RecursoHumano")
                        .HasForeignKey("IdRecurso")
                        .HasConstraintName("FK_Recurso")
                        .IsRequired();
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoMaterial", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecursoNavigation")
                        .WithMany("RecursoMaterial")
                        .HasForeignKey("IdRecurso")
                        .HasConstraintName("FK_RecursoMaterial_Recurso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecursoMaterial", "IdTipoRecursoMaterialNavigation")
                        .WithMany("RecursoMaterial")
                        .HasForeignKey("IdTipoRecursoMaterial")
                        .HasConstraintName("FK_RecursoMaterial_TipoRecursoMaterial")
                        .IsRequired();
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.RecursoRenovable", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecursoNavigation")
                        .WithMany("RecursoRenovable")
                        .HasForeignKey("IdRecurso")
                        .HasConstraintName("FK_RecursoRenovable_Recurso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecursoRenovable", "IdTipoRecursoRenovableNavigation")
                        .WithMany("RecursoRenovable")
                        .HasForeignKey("IdTipoRecursoRenovable")
                        .HasConstraintName("FK_RecursoRenovable_TipoRecursoRenovable")
                        .IsRequired();
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Requisito", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Servicio", "IdServicioNavigation")
                        .WithMany("Requisito")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK_Servicio");

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecurso", "IdTipoRecurso1Navigation")
                        .WithMany("RequisitoIdTipoRecurso1Navigation")
                        .HasForeignKey("IdTipoRecurso1")
                        .HasConstraintName("FK_TipoRecurso1");

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecurso", "IdTipoRecurso2Navigation")
                        .WithMany("RequisitoIdTipoRecurso2Navigation")
                        .HasForeignKey("IdTipoRecurso2")
                        .HasConstraintName("FK_TipoRecurso2");

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRecursoMaterial", "IdTipoRecursoMaterial1Navigation")
                        .WithMany("Requisito")
                        .HasForeignKey("IdTipoRecursoMaterial1")
                        .HasConstraintName("FK_Requisito_TipoRecursoMaterial");

                    b.HasOne("INFORAP.API.Persistence.Context.TipoRegla", "IdTipoReglaNavigation")
                        .WithMany("Requisito")
                        .HasForeignKey("IdTipoRegla")
                        .HasConstraintName("FK_Requisito_TipoRegla");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Rol", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("Rol")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Rol_Empresa");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Servicio", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Cliente", "IdClienteNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Cliente");

                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Empresa");

                    b.HasOne("INFORAP.API.Persistence.Context.MotivoBajaServicio", "IdMotivoBajaServicioNavigation")
                        .WithMany("Servicio")
                        .HasForeignKey("IdMotivoBajaServicio")
                        .HasConstraintName("FK_Servicio_MotivoBajaServicio");

                    b.HasOne("INFORAP.API.Persistence.Context.RecursoHumano", "IdRecursoHumano1Navigation")
                        .WithMany("ServicioIdRecursoHumano1Navigation")
                        .HasForeignKey("IdRecursoHumano1")
                        .HasConstraintName("FK_RecursoHumano1");

                    b.HasOne("INFORAP.API.Persistence.Context.RecursoHumano", "IdRecursoHumano2Navigation")
                        .WithMany("ServicioIdRecursoHumano2Navigation")
                        .HasForeignKey("IdRecursoHumano2")
                        .HasConstraintName("FK_RecursoHumano2");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.ServicioRecurso", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.MotivoDesasignacion", "IdMotivoDesasignacionNavigation")
                        .WithMany("ServicioRecurso")
                        .HasForeignKey("IdMotivoDesasignacion")
                        .HasConstraintName("FK_ServicioRecurso_MotivoDesasignacion");

                    b.HasOne("INFORAP.API.Persistence.Context.Recurso", "IdRecursoNavigation")
                        .WithMany("ServicioRecurso")
                        .HasForeignKey("IdRecurso")
                        .HasConstraintName("FK_ServicioRecurso_Recurso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Servicio", "IdServicioNavigation")
                        .WithMany("ServicioRecurso")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK_ServicioRecurso_ServicioRecurso")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Ubicacion", "IdUbicacionNavigation")
                        .WithMany("ServicioRecurso")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_ServicioRecurso_Ubicacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.StockRecursoMaterial", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("StockRecursoMaterial")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_StockRecursoMaterial_Empresa");

                    b.HasOne("INFORAP.API.Persistence.Context.RecursoMaterial", "IdRecursoMaterialNavigation")
                        .WithMany("StockRecursoMaterial")
                        .HasForeignKey("IdRecursoMaterial")
                        .HasConstraintName("FK_StockRecursoMaterial_RecursoMaterial")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Ubicacion", "IdUbicacionNavigation")
                        .WithMany("StockRecursoMaterial")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_StockRecursoMaterial_Ubicacion");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.Usuario", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Empresa", "IdEmpresaNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Usuario_Empresa")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.RecursoHumano", "IdRecursoHumanoNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdRecursoHumano")
                        .HasConstraintName("FK_Usuario_RecursoHumano");
                });

            modelBuilder.Entity("INFORAP.API.Persistence.Context.UsuarioRol", b =>
                {
                    b.HasOne("INFORAP.API.Persistence.Context.Rol", "IdRolNavigation")
                        .WithMany("UsuarioRol")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_Rol")
                        .IsRequired();

                    b.HasOne("INFORAP.API.Persistence.Context.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioRol")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Usuario")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
